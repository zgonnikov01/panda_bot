import json, random, datetime

from aiogram import Router, Bot, F
from aiogram.filters import Command, StateFilter, CommandStart, CommandObject
from aiogram.filters.callback_data import CallbackData
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state

from config_data.config import load_config
from lexicon.lexicon_ru import LEXICON
from models.methods import get_user
from states.states import FSMLotteryUpload
from handlers.utils import get_current_date, get_mongodb


config = load_config()
router = Router()


async def answer_animation(message: Message, animation_path: str):
    mongodb = get_mongodb()
    animation = mongodb.assets.find_one({'animation_path': animation_path})
    print(animation_path, animation)
    if animation != None:
        await message.answer_animation(
            animation=animation['file_id'],
            duration=15,
            height=200,
            width=200
        )
    else:
        animation = FSInputFile(animation_path)
        msg = await message.answer_animation(
            animation=FSInputFile(animation_path),
            duration=15,
            height=200,
            width=200
        )
        mongodb.assets.insert_one({
            'animation_path': animation_path,
            'file_id': msg.document.file_id
        })

quotes = [
    '–°–µ–≥–æ–¥–Ω—è ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π!',
    '–¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –±–æ–ª—å—à–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å.',
    '–ö–∞–∂–¥—ã–π —à–∞–≥ –≤–ø–µ—Ä–µ–¥ ‚Äî —ç—Ç–æ —à–∞–≥ –∫ —É—Å–ø–µ—Ö—É.',
    '–ù–µ –±–æ–π—Å—è –º–µ—á—Ç–∞—Ç—å: —Ç–≤–æ–∏ –º–µ—á—Ç—ã –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é!',
    '–° –∫–∞–∂–¥—ã–º –¥–Ω–µ–º —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –ª—É—á—à–µ.',
    '–°—á–∞—Å—Ç—å–µ ‚Äî —ç—Ç–æ –≤—ã–±–æ—Ä. –í—ã–±–∏—Ä–∞–π –µ–≥–æ —Å–µ–≥–æ–¥–Ω—è!',
    '–£–ª—ã–±–∫–∞ ‚Äî —ç—Ç–æ —Å–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç –¥–ª—è –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.',
    '–í–µ—Ä—å –≤ —Å–µ–±—è, –∏ –≤–µ—Å—å –º–∏—Ä –ø–æ–≤–µ—Ä–∏—Ç –≤ —Ç–µ–±—è!',
    '–û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ —á–∞—Å—Ç—å –ø—É—Ç–∏ –∫ —É—Å–ø–µ—Ö—É. –£—á–∏—Å—å –Ω–∞ –Ω–∏—Ö!',
    '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ.',
    '–¢—ã ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö.',
    '–ù–µ –∑–∞–±—ã–≤–∞–π —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –º–µ–ª–æ—á–∞–º. –û–Ω–∏ –¥–µ–ª–∞—é—Ç –∂–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π!',
    '–¢—ã —É–Ω–∏–∫–∞–ª–µ–Ω, –∏ –≤ —ç—Ç–æ–º —Ç–≤–æ—è —Å–∏–ª–∞.',
    '–î–µ–ª–∞–π —Ç–æ, —á—Ç–æ –ª—é–±–∏—à—å, –∏ —É—Å–ø–µ—Ö –ø–æ—Å–ª–µ–¥—É–µ—Ç –∑–∞ —Ç–æ–±–æ–π.',
    '–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –º—ã—Å–ª–∏ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è.',
    '–ü—Ä–æ—Å—Ç–æ –±—É–¥—å —Å–æ–±–æ–π ‚Äî —ç—Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—á–∞—Å—Ç—å—è.',
    '–ò—â–∏ —Ö–æ—Ä–æ—à–µ–µ –≤ –∫–∞–∂–¥–æ–º –¥–Ω–µ: –æ–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ—Ç—Å—è!',
    '–¢—ã –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ.',
    '–í—Å–µ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å –ª—é–±–æ–≤—å—é, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º.',
    '–í–∫–ª–∞–¥—ã–≤–∞–π —Å–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é –≤ —Ç–æ, —á—Ç–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.',
    '–¢—ã ‚Äî –º–∞–≥–Ω–∏—Ç –¥–ª—è —Ö–æ—Ä–æ—à–∏—Ö –ª—é–¥–µ–π –∏ —Å–æ–±—ã—Ç–∏–π.',
    '–ñ–∏–∑–Ω—å –ø–æ–ª–Ω–∞ —á—É–¥–µ—Å, —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —É–º–µ—Ç—å –∏—Ö –∑–∞–º–µ—á–∞—Ç—å!',
    '–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é.',
    '–°–º–æ—Ç—Ä–∏ –Ω–∞ –º–∏—Ä —Å –Ω–∞–¥–µ–∂–¥–æ–π –∏ –æ–ø—Ç–∏–º–∏–∑–º–æ–º.',
    '–¢—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –º–Ω–æ–≥–æ, –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º!',
    '–¢—ã ‚Äî —Ç–≤–æ—Ä–µ—Ü —Å–≤–æ–µ–π —Å—É–¥—å–±—ã. –°–æ–∑–¥–∞–≤–∞–π –µ—ë —Å –ª—é–±–æ–≤—å—é!',
    '–û—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤–æ–µ –∏ –ø–æ–∑–Ω–∞–≤–∞–π –º–∏—Ä –≤–æ–∫—Ä—É–≥.',
    '–ó–∞–±–æ—Ç—å—Å—è –æ —Å–µ–±–µ ‚Äî —ç—Ç–æ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Å—á–∞—Å—Ç—å—é.',
    '–î–µ–ª–∞–π –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞, –∏ –æ–Ω–∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∫ —Ç–µ–±–µ.',
    '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å —É—Ç—Ä–∞ ‚Äî –Ω–∞—á–Ω–∏ –µ–≥–æ —Å —É–ª—ã–±–∫–∏!',
    '–ë—É–¥—å —Å–º–µ–ª—ã–º, –¥–µ–ª–∞—è —à–∞–≥–∏ –∫ —Å–≤–æ–∏–º –º–µ—á—Ç–∞–º.',
    '–¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ª—é–±—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏.',
    '–ñ–∏–∑–Ω—å ‚Äî —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∫–∞–∂–¥—ã–º –º–æ–º–µ–Ω—Ç–æ–º.',
    '–í–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –∂–µ–ª–∞–Ω–∏—è–º –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —É—Å–ø–µ—Ö—É.',
    '–û—Ç–∫—Ä—ã–≤–∞–π —Å–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –¥–ª—è –ª—é–±–≤–∏ –∏ –¥—Ä—É–∂–±—ã.',
    '–ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ç–µ–±–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —ç–º–æ—Ü–∏–∏!',
    '–¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è ‚Äî —ç—Ç–æ —Ç–≤–æ—è —Å–∏–ª–∞.',
    '–ü–æ—Å—Ç–∏–≥–∞–π –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã –∏ —Å—Ç—Ä–µ–º–∏—Å—å –∫ –≤—ã—Å–æ—Ç–∞–º!',
    '–ù–∞—Å—Ç—Ä–æ–π —Å–µ–±—è –Ω–∞ —É—Å–ø–µ—Ö, –∏ –æ–Ω –Ω–∞–π–¥–µ—Ç —Ç–µ–±—è.',
    '–¢—ã —Å–æ–∑–¥–∞–µ—à—å —Å–≤–æ—é —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –¥–µ–ª–∞–π –µ—ë —Å–≤–µ—Ç–ª–æ–π!',
    '–î–µ–ª–∞–π –≤—ã–±–æ—Ä –≤ –ø–æ–ª—å–∑—É —Å—á–∞—Å—Ç—å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.',
    '–ñ–∏–≤–∏ –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Å–æ–±–æ–π –∏ –æ–∫—Ä—É–∂–∞—é—â–∏–º –º–∏—Ä–æ–º.',
    '–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏.',
    '–°–ª—É—à–∞–π —Å–≤–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Å–ª–µ–¥—É–π –µ–≥–æ –≥–æ–ª–æ—Å—É.',
    '–†–∞–¥—É–π—Å—è —Å–≤–æ–µ–º—É –ø—É—Ç–∏ –∏ —Ç–æ–º—É, —á—Ç–æ —Ç—ã –¥–æ—Å—Ç–∏–≥!',
    '–î–æ–±—Ä–æ—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –ø–µ—Ä–µ–¥–∞–≤–∞–π –µ—ë –¥–∞–ª—å—à–µ.',
    '–ù–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–π —Å–µ–±—è —Å –¥—Ä—É–≥–∏–º–∏, —Ç—ã —É–Ω–∏–∫–∞–ª–µ–Ω!',
    '–ó–∞–±–æ—Ç–∞ –æ –¥—Ä—É–≥–∏—Ö ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å—á–∞—Å—Ç—å—é.',
    '–ö–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤–∞–∂–µ–Ω ‚Äî –Ω–∞–ø–æ–ª–Ω—è–π –µ–≥–æ —Å–º—ã—Å–ª–æ–º.',
    '–ù–∞—á–Ω–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å —Å –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∏ —Å–º–æ—Ç—Ä–∏, –∫–∞–∫ –æ–Ω –∏–∑–º–µ–Ω–∏—Ç—Å—è!'
]


@router.message(Command(commands='spin'), StateFilter(default_state))
async def spin(message: Message, bot: Bot, state: FSMContext):
    mongodb = get_mongodb()
    lottery_state = mongodb.lottery_state.find_one()
    if not lottery_state:
        await message.answer('–°—Ç–æ–ª—å–∫–æ –¥–µ–ª –Ω–∞–≤–∞–ª–∏–ª–æ—Å—å –Ω–∞ –ü–∞–Ω–¥—É –ë–æüêº\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ–Ω —Å–µ–π—á–∞—Å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–πüòî\n\n–ù–æ –∑–∞–≤—Ç—Ä–∞ –º–æ–∂–µ—Ç –≤—Å–µ –ø–æ–º–µ–Ω—è—Ç—å—Å—èü§©')
        return
    lottery = mongodb.lotteries.find_one({'label': lottery_state['label']})
    user_id = str(message.from_user.id)
    if 'spin_history' in lottery and \
            user_id in lottery['spin_history'] and \
            datetime.datetime.now().date().isoformat() in lottery['spin_history'][user_id]:

        await message.answer(
            text='–ö–∞–∂–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ –∏–≥—Ä–∞–ªüêº\n\n–ü—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞ - —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç—ã –ø–æ–±–µ–¥–∏—à—å‚òùüèª'
        )
        return
    
    # check if user hasn't won more than 2 times in last 7 days
    
    option = random.choice(lottery_state['bonus_points']['options'])

    if lottery_state['gifts'] and random.random() * 100 < lottery['gift_percent']:
            gift = random.choices(
                population=list(lottery_state['gifts'].keys()),
                weights=list(lottery_state['gifts'].values()),
            )[0]

            lottery['gifts'][gift] -= 1
            if lottery['gifts'][gift] == 0:
                lottery['gifts'].pop(gift)

            lottery_state['gifts'][gift] -= 1
            if lottery_state['gifts'][gift] == 0:
                lottery_state['gifts'].pop(gift)

            await answer_animation(
                message=message,
                animation_path=f'assets/lottery/{gift}.gif'
            )
            result = gift
            if gift == 'pizza':
                await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—éüêº‚ú®\n\n–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫—É—é –ø–∏—Ü—Ü—É –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ –æ—Ç –ü–∞–Ω–¥—ã –ë–æü•≥\n\n–í–æ—Ç —ç—Ç–æ —É–¥–∞—á–∞ üçÄ \n\n–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑, –ø–æ–∑–≤–æ–Ω–∏ –Ω–∞—à–∏–º –≤–æ–ª—à–µ–±–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–∞–º –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 8-800-600-65-63 –∏ —Å–æ–æ–±—â–∏, —á—Ç–æ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª')
            elif gift == 'mochi':
                await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—éüêº‚ú®\n\n–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –≤–∫—É—Å–Ω–µ–π—à–∏–π —Ä–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –æ—Ç –ü–∞–Ω–¥—ã –ë–æü•≥\n\n–í–æ—Ç —ç—Ç–æ —É–¥–∞—á–∞ üçÄ \n\n–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑, –ø–æ–∑–≤–æ–Ω–∏ –Ω–∞—à–∏–º –≤–æ–ª—à–µ–±–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–∞–º –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 8-800-600-65-63 –∏ —Å–æ–æ–±—â–∏, —á—Ç–æ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª')
            elif gift == 'rolls':
                await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—éüêº‚ú®\n\n–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª –≤–∫—É—Å–Ω–µ–π—à–∏–π —Ä–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –æ—Ç –ü–∞–Ω–¥—ã –ë–æü•≥\n\n–í–æ—Ç —ç—Ç–æ —É–¥–∞—á–∞ üçÄ \n\n–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑, –ø–æ–∑–≤–æ–Ω–∏ –Ω–∞—à–∏–º –≤–æ–ª—à–µ–±–Ω—ã–º –ø–æ–º–æ—â–Ω–∏–∫–∞–º –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 8-800-600-65-63 –∏ —Å–æ–æ–±—â–∏, —á—Ç–æ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª')


    elif random.random() * 100 < lottery['bonus_point_percent'] and \
            int(option) <= lottery_state['bonus_points']['quantity']:
        lottery_state['bonus_points']['quantity'] -= option
        lottery['bonus_points']['quantity'] -= option
        await answer_animation(
            message=message,
            animation_path='assets/lottery/bonus_points.gif'
        )
        result = f'bonus{option}'
        # SOMEHOW GIVE POINTS TO USER
        mongodb.bonus.insert_one({
            'tg_id': user_id,
            'amount': int(option),
            'datetime': datetime.datetime.now()
        })
        # REPLY WITH INSTRUCTION
        await message.answer(quotes[random.randint(0, 49)])
        await message.answer(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—éüêº‚ú®\n\n–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª {option} –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –æ—Ç –ü–∞–Ω–¥—ã –ë–æü•≥\n\n–í–æ—Ç —ç—Ç–æ —É–¥–∞—á–∞ üçÄ \n\n–ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—Ç—Å—è —Ç–µ–±–µ –Ω–∞ —Å—á—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, —Ç–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—É–¥—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ: https://join2.club/panda')
    else:
        await answer_animation(
            message=message,
            animation_path='assets/lottery/nothing.gif'
        )
        #await message.answer('–°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–∞ –ø—Ä–æ—à–ª–∞ –º–∏–º–æ —Ç–µ–±—è, –Ω–æ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è üêº‚òù\n\n–ó–∞–≤—Ç—Ä–∞ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ü§©')
        await message.answer(quotes[random.randint(0, 49)])
        result = 'nothing'
    
    if 'spin_history' not in lottery:
        lottery['spin_history'] = {}
    if user_id not in lottery['spin_history']:
        lottery['spin_history'][user_id] = {}
    lottery['spin_history'][user_id][datetime.datetime.now().date().isoformat()] = result
    mongodb.lottery_state.find_one_and_replace(
        filter={'label': lottery_state['label']},
        replacement=lottery_state    
    )
    mongodb.lotteries.find_one_and_replace(
        filter={'label': lottery_state['label']},
        replacement=lottery
    )

